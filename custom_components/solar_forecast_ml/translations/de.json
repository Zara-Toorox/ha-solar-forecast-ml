{
  "config": {
    "step": {
      "user": {
        "title": "Solar Forecast ML - Konfiguration",
        "description": "Konfiguriere deine Solar Forecast ML Integration.\n\nPflichtfelder: Wettersensor, Leistungssensor und Tagesertrag\nAlle anderen Felder sind optional und können leer gelassen werden.",
        "data": {
          "weather_entity": "Wettersensor (PFLICHT - z.B. weather.home mit Forecast-Daten)",
          "power_entity": "Aktueller Leistungssensor in Watt (PFLICHT - z.B. sensor.solar_power)",
          "solar_yield_today": "Solar-Tagesertrag in kWh (PFLICHT - MUSS sich täglich zurücksetzen!)",
          "total_consumption_today": "Tagesverbrauch in kWh (optional - MUSS sich täglich zurücksetzen!)",
          "plant_kwp": "Anlagenleistung in kWp (optional - z.B. 5.0 für installierte Spitzenleistung)",
          "rain_sensor": "Regensensor (optional - binary_sensor oder mm/h)",
          "current_power": "Alternative Leistungsquelle in Watt (optional - falls andere Quelle als power_entity)",
          "lux_sensor": "Helligkeitssensor in Lux (optional - z.B. 50000 lx bei Sonne)",
          "temp_sensor": "Außentemperatursensor in °C (optional - z.B. sensor.outside_temp)",
          "wind_sensor": "Windsensor in km/h oder m/s (optional - für Panel-Kühlungseffekt)",
          "uv_sensor": "UV-Sensor (optional - UV-Index 0-11 oder W/m²)",
          "forecast_solar": "Forecast.Solar Sensor (optional - zum Vergleich mit ML-Modell)"
        },
        "data_description": {
          "weather_entity": "Wetter-Entity für Vorhersageberechnungen. Muss Vorhersagedaten mit temperature, humidity, cloud_coverage liefern. Kompatibel: Met.no, OpenWeatherMap, DWD.",
          "power_entity": "AKTUELLER Solar-Leistungssensor in Watt (W). Liefert die MOMENTANE Produktionsleistung für ML-Training. Format: Dezimalzahl mit W als Einheit. Beispiel: 2500 W bei aktueller Produktion.",
          "solar_yield_today": "Täglicher Solar-Ertrag in kWh. WICHTIG: Muss sich täglich um Mitternacht automatisch auf 0 zurücksetzen! (z.B. utility_meter daily). Wird für ML-Training benötigt. (Pflichtfeld)",
          "total_consumption_today": "Tagesverbrauchssensor in kWh. WICHTIG: Muss sich täglich um Mitternacht automatisch auf 0 zurücksetzen! Verwende utility_meter mit cycle: daily. Wird für Autarkie-Berechnung verwendet. Beispiel: 12.5 kWh am Abend.",
          "plant_kwp": "Installierte Anlagenleistung in Kilowatt Peak (kWp). Dies ist die Nennleistung deiner Solaranlage. Beispiel: 5.0 für eine 5 kWp Anlage. Steht im Datenblatt oder auf dem Wechselrichter. Bereich: 0.1-1000 kWp.",
          "rain_sensor": "Regensensor - entweder binary_sensor (on/off bei Regen) oder Sensor mit Regenmenge in mm/h. Bei Regen reduziert sich die Sonneneinstrahlung und die Vorhersage wird entsprechend angepasst.",
          "current_power": "Alternative Leistungsquelle in Watt (W). Falls du einen zusätzlichen oder anderen Leistungssensor als power_entity verwenden möchtest. Auch als momentane Leistung in W.",
          "lux_sensor": "Helligkeitssensor in Lux (lx). Direktes Maß für verfügbares Sonnenlicht am Panel-Standort. Typische Werte: 50.000-100.000 lx bei direkter Sonneneinstrahlung. Format: Ganzzahl mit lx als Einheit.",
          "temp_sensor": "Außentemperatursensor in °C. Wird verwendet wenn genauer als die Wetter-Entity. Höhere Temperaturen können Panel-Effizienz reduzieren (ca. -0.5%/°C über 25°C). Format: Dezimalzahl mit °C.",
          "wind_sensor": "Windsensor in km/h oder m/s. Höhere Windgeschwindigkeiten können die Panel-Kühlung verbessern und somit die Effizienz leicht steigern. Format: Dezimalzahl.",
          "uv_sensor": "UV-Strahlungssensor. Entweder als UV-Index (0-11+) oder als Strahlungsleistung in W/m². UV-Strahlung korreliert direkt mit der Solarproduktion. Beispiel: UV-Index 8 = sehr hohe Strahlung.",
          "forecast_solar": "Forecast.Solar Integration Sensor (z.B. sensor.energy_production_today). Wird als zusätzlicher Vergleichswert und Datenquelle für das ML-Modell verwendet."
        }
      },
      "reconfigure": {
        "title": "Solar Forecast ML - Neukonfiguration",
        "description": "Ändere die Konfiguration deiner Solar Forecast ML Integration.\n\nPflichtfelder: Wettersensor, Leistungssensor und Tagesertrag\nAlle anderen Felder sind optional. Leere Felder werden gelöscht.",
        "data": {
          "weather_entity": "Wettersensor (PFLICHT - z.B. weather.home mit Forecast-Daten)",
          "power_entity": "Aktueller Leistungssensor in Watt (PFLICHT - z.B. sensor.solar_power)",
          "solar_yield_today": "Solar-Tagesertrag in kWh (PFLICHT - MUSS sich täglich zurücksetzen!)",
          "total_consumption_today": "Tagesverbrauch in kWh (optional - MUSS sich täglich zurücksetzen!)",
          "plant_kwp": "Anlagenleistung in kWp (optional - z.B. 5.0 für installierte Spitzenleistung)",
          "rain_sensor": "Regensensor (optional - binary_sensor oder mm/h)",
          "current_power": "Alternative Leistungsquelle in Watt (optional - falls andere Quelle als power_entity)",
          "lux_sensor": "Helligkeitssensor in Lux (optional - z.B. 50000 lx bei Sonne)",
          "temp_sensor": "Außentemperatursensor in °C (optional - z.B. sensor.outside_temp)",
          "wind_sensor": "Windsensor in km/h oder m/s (optional - für Panel-Kühlungseffekt)",
          "uv_sensor": "UV-Sensor (optional - UV-Index 0-11 oder W/m²)",
          "forecast_solar": "Forecast.Solar Sensor (optional - zum Vergleich mit ML-Modell)"
        },
        "data_description": {
          "weather_entity": "Wetter-Entity für Vorhersageberechnungen. Muss Vorhersagedaten mit temperature, humidity, cloud_coverage liefern. Kompatibel: Met.no, OpenWeatherMap, DWD.",
          "power_entity": "AKTUELLER Solar-Leistungssensor in Watt (W). Liefert die MOMENTANE Produktionsleistung für ML-Training. Format: Dezimalzahl mit W als Einheit. Beispiel: 2500 W bei aktueller Produktion.",
          "solar_yield_today": "Täglicher Solar-Ertrag in kWh. WICHTIG: Muss sich täglich um Mitternacht automatisch auf 0 zurücksetzen! (z.B. utility_meter daily). Wird für ML-Training benötigt. (Pflichtfeld)",
          "total_consumption_today": "Tagesverbrauchssensor in kWh. WICHTIG: Muss sich täglich um Mitternacht automatisch auf 0 zurücksetzen! Verwende utility_meter mit cycle: daily. Wird für Autarkie-Berechnung verwendet. Beispiel: 12.5 kWh am Abend.",
          "plant_kwp": "Installierte Anlagenleistung in Kilowatt Peak (kWp). Dies ist die Nennleistung deiner Solaranlage. Beispiel: 5.0 für eine 5 kWp Anlage. Steht im Datenblatt oder auf dem Wechselrichter. Bereich: 0.1-1000 kWp.",
          "rain_sensor": "Regensensor - entweder binary_sensor (on/off bei Regen) oder Sensor mit Regenmenge in mm/h. Bei Regen reduziert sich die Sonneneinstrahlung und die Vorhersage wird entsprechend angepasst.",
          "current_power": "Alternative Leistungsquelle in Watt (W). Falls du einen zusätzlichen oder anderen Leistungssensor als power_entity verwenden möchtest. Auch als momentane Leistung in W.",
          "lux_sensor": "Helligkeitssensor in Lux (lx). Direktes Maß für verfügbares Sonnenlicht am Panel-Standort. Typische Werte: 50.000-100.000 lx bei direkter Sonneneinstrahlung. Format: Ganzzahl mit lx als Einheit.",
          "temp_sensor": "Außentemperatursensor in °C. Wird verwendet wenn genauer als die Wetter-Entity. Höhere Temperaturen können Panel-Effizienz reduzieren (ca. -0.5%/°C über 25°C). Format: Dezimalzahl mit °C.",
          "wind_sensor": "Windsensor in km/h oder m/s. Höhere Windgeschwindigkeiten können die Panel-Kühlung verbessern und somit die Effizienz leicht steigern. Format: Dezimalzahl.",
          "uv_sensor": "UV-Strahlungssensor. Entweder als UV-Index (0-11+) oder als Strahlungsleistung in W/m². UV-Strahlung korreliert direkt mit der Solarproduktion. Beispiel: UV-Index 8 = sehr hohe Strahlung.",
          "forecast_solar": "Forecast.Solar Integration Sensor (z.B. sensor.energy_production_today). Wird als zusätzlicher Vergleichswert und Datenquelle für das ML-Modell verwendet."
        }
      }
    },
    "error": {
      "cannot_connect": "Verbindung zum Sensor fehlgeschlagen",
      "invalid_auth": "Ungültige Authentifizierung",
      "unknown": "Unbekannter Fehler aufgetreten",
      "invalid_capacity": "Ungültige Kapazität (muss zwischen 0.1 und 1000 kWp liegen)",
      "invalid_efficiency": "Ungültige Effizienz (muss zwischen 0.01 und 1.0 liegen)",
      "invalid_input": "Ungültige Eingabe",
      "required": "Dieses Feld ist erforderlich"
    },
    "abort": {
      "already_configured": "Diese Integration ist bereits konfiguriert",
      "reconfigure_successful": "Neukonfiguration erfolgreich abgeschlossen",
      "not_reconfigure": "Dieser Flow ist nur für Neukonfiguration verfügbar",
      "entry_not_found": "Konfigurationseintrag nicht gefunden"
    }
  },
  "options": {
    "step": {
      "init": {
        "title": "Solar Forecast ML - Optionen",
        "description": "Konfiguriere die erweiterten Optionen für Solar Forecast ML.",
        "data": {
          "update_interval": "Update-Intervall in Sekunden (Empfehlung: 900-1800)",
          "diagnostic": "Diagnose-Modus (zeigt erweiterte Debug-Sensoren)",
          "enable_hourly": "Stündliche Vorhersagen (erstellt 24 zusätzliche Sensoren)",
          "notify_startup": "Start-Benachrichtigung",
          "notify_forecast": "Vorhersage-Benachrichtigungen (kann viele Meldungen erzeugen)",
          "notify_learning": "Lernprozess-Benachrichtigungen",
          "notify_successful_learning": "Erfolgreiches Learning-Benachrichtigungen"
        },
        "data_description": {
          "update_interval": "Aktualisierungsintervall in Sekunden. Empfehlung: 900-1800 (15-30 Min). Bereich: 300-86400. Kürzere Intervalle erhöhen System-Last.",
          "diagnostic": "Aktiviert erweiterte Diagnose-Sensoren für Fehlersuche. Zeigt ML-Metriken, interne Status und System-Health Informationen.",
          "enable_hourly": "Erstellt zusätzliche Sensoren für stündliche Vorhersagen (sensor.solar_forecast_hour_0 bis hour_23). Ermöglicht präzisere 24h-Planung.",
          "notify_startup": "Zeigt persistent notification beim Start der Integration. Bestätigt erfolgreiche Initialisierung.",
          "notify_forecast": "Zeigt Benachrichtigung bei jedem Vorhersage-Update. ACHTUNG: Kann viele Benachrichtigungen erzeugen bei kurzen Update-Intervallen.",
          "notify_learning": "Benachrichtigt während des ML-Trainings. Informiert über laufenden Lernprozess und Modell-Updates.",
          "notify_successful_learning": "Benachrichtigt nach erfolgreichem ML-Training. Bestätigt Modell-Verbesserung mit Genauigkeits-Metriken."
        }
      }
    }
  },
  "entity": {
    "sensor": {
      "solar_forecast_heute": {
        "name": "Vorhersage Heute"
      },
      "solar_forecast_morgen": {
        "name": "Vorhersage Morgen"
      },
      "diagnostic_status": {
        "name": "Diagnose-Status"
      },
      "solar_accuracy": {
        "name": "Vorhersage-Genauigkeit"
      },
      "yesterday_deviation": {
        "name": "Abweichung Gestern"
      },
      "peak_production_hour": {
        "name": "Spitzenproduktion Stunde"
      },
      "production_time": {
        "name": "Produktionszeit"
      },
      "average_yield": {
        "name": "Durchschnittlicher Ertrag"
      },
      "autarky": {
        "name": "Autarkie"
      },
      "last_coordinator_update": {
        "name": "Letztes Update"
      },
      "update_age": {
        "name": "Update-Alter"
      },
      "last_ml_training": {
        "name": "Letztes ML-Training"
      },
      "next_scheduled_update": {
        "name": "Nächstes geplantes Update"
      },
      "ml_service_status": {
        "name": "ML-Service Status"
      },
      "coordinator_health": {
        "name": "Coordinator-Gesundheit"
      },
      "data_files_status": {
        "name": "Datendatei-Status"
      },
      "external_temp": {
        "name": "Externe Temperatur"
      },
      "external_humidity": {
        "name": "Externe Luftfeuchtigkeit"
      },
      "external_wind": {
        "name": "Externer Wind"
      },
      "external_rain": {
        "name": "Externer Regen"
      },
      "external_uv": {
        "name": "Externe UV-Strahlung"
      },
      "external_lux": {
        "name": "Externe Helligkeit"
      }
    },
    "button": {
      "manual_forecast": {
        "name": "Manuelle Vorhersage"
      },
      "retrain_model": {
        "name": "Modell neu trainieren"
      },
      "reset_data": {
        "name": "Daten zurücksetzen"
      },
      "update_forecast": {
        "name": "Prognose aktualisieren"
      },
      "calibrate_model": {
        "name": "Modell kalibrieren"
      },
      "clear_errors": {
        "name": "Fehler löschen"
      }
    }
  }
}